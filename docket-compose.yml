version: "3.9"

services:
  postgres:
    image: postgres:16
    container_name: osl_pg
    ports:
      - "${DB_PORT:-5432}:5432"
    environment:
      POSTGRES_DB: ${DB_NAME:-osl}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${DB_NAME:-osl}"]
      interval: 3s
      timeout: 3s
      retries: 20
    volumes:
      - pgdata:/var/lib/postgresql/data

  adminer:
    image: adminer:4
    container_name: osl_adminer
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres

  api:
    image: python:3.11-slim
    container_name: osl_api
    working_dir: /app
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PYTHONUNBUFFERED: "1"
      FLASK_ENV: development
      FLASK_DEBUG: "1"
      DEFAULT_TENANT_ID: ${DEFAULT_TENANT_ID:-00000000-0000-0000-0000-000000000001}
      DATABASE_URL: ${DATABASE_URL:-postgresql+psycopg://osl_app:osl_app@postgres:5432/osl}
      APP_DB_USER: ${APP_DB_USER:-osl_app}
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
    command: >
      sh -c "
        pip install -U pip &&
        pip install -r requirements.txt &&
        flask --app backend/app.py run --host 0.0.0.0 --port 8000
      "

volumes:
  pgdata:
